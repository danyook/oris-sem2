import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
    id "application"
    id "com.github.johnrengelman.shadow" version "8.1.1"

    id "war"
}

group = 'ru.itis.danyook'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
}

ext {
    junitVersion = '5.10.0'
    springVersion = '6.2.3'
    tomcatEmbedVersion = '11.0.5'
    lombokVersion = '1.18.36'
    mapstructVersion = '1.5.5.Final'
    hibernateVersion = '6.6.4.Final'
    postgresqlVersion = '42.7.3'
    springDataJpaVersion = '3.4.0'
    hikariCpVersion = '5.0.1'
    jakartaServletVersion = '6.0.0'
    jacksonVersion = '2.18.1'
    slf4jVersion = '2.0.16'
    lombokMapstructBindingVersion = '0.2.0'
    springSecurityVersion = '6.4.4'
    thymeleafVersion = '3.1.3.RELEASE'
}

dependencies {
    // JUnit 5
    testImplementation platform("org.junit:junit-bom:${junitVersion}")
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // Spring Framework
    implementation "org.springframework:spring-web:${springVersion}"
    implementation "org.springframework:spring-webmvc:${springVersion}"
    implementation "org.springframework:spring-context-support:${springVersion}"
    implementation "org.springframework:spring-jdbc:${springVersion}"
    implementation 'org.springframework:spring-orm:${springVersion}'

    implementation("org.springframework.security:spring-security-core:$springSecurityVersion")
    implementation("org.springframework.security:spring-security-web:$springSecurityVersion")
    implementation("org.springframework.security:spring-security-config:$springSecurityVersion")
    implementation("org.springframework.security:spring-security-taglibs:$springSecurityVersion")

    // Tomcat Embed
    implementation "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatEmbedVersion}"

    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // MapStruct
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    // Lombok MapStruct Binding
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
    implementation "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    // Hibernate
    implementation "org.hibernate.orm:hibernate-core:${hibernateVersion}"

    // PostgreSQL Driver
    implementation "org.postgresql:postgresql:${postgresqlVersion}"

    // Spring Data JPA
    implementation "org.springframework.data:spring-data-jpa:${springDataJpaVersion}"

    // HikariCP
    implementation "com.zaxxer:HikariCP:${hikariCpVersion}"

    // Jakarta Servlet API
    compileOnly "jakarta.servlet:jakarta.servlet-api:${jakartaServletVersion}"

    // Jackson
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    implementation("org.thymeleaf:thymeleaf-spring6:${thymeleafVersion}")

}

application {
    mainClass = "ru.itis.danyook.Main"
}

test {
    useJUnitPlatform()
}

tasks.withType(ShadowJar).configureEach {
    mergeServiceFiles()
}

tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.annotationProcessor
}